# Generated from CMake.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,340,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,1,0,1,0,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
        1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
        1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,
        1,14,1,14,1,14,3,14,189,8,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,15,1,15,1,15,3,15,201,8,15,1,16,1,16,1,17,1,17,5,17,207,8,17,10,
        17,12,17,210,9,17,1,18,1,18,4,18,214,8,18,11,18,12,18,215,1,19,1,
        19,1,19,3,19,221,8,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,
        21,3,21,232,8,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,5,23,241,8,23,
        10,23,12,23,244,9,23,1,23,1,23,1,24,1,24,1,24,3,24,251,8,24,1,24,
        3,24,254,8,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,
        5,26,266,8,26,10,26,12,26,269,9,26,1,26,3,26,272,8,26,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,5,28,286,8,28,
        10,28,12,28,289,9,28,1,28,1,28,5,28,293,8,28,10,28,12,28,296,9,28,
        1,28,1,28,5,28,300,8,28,10,28,12,28,303,9,28,1,28,1,28,5,28,307,
        8,28,10,28,12,28,310,9,28,3,28,312,8,28,1,28,1,28,3,28,316,8,28,
        1,28,3,28,319,8,28,1,28,1,28,1,29,1,29,3,29,325,8,29,1,29,4,29,328,
        8,29,11,29,12,29,329,1,29,1,29,1,30,4,30,335,8,30,11,30,12,30,336,
        1,30,1,30,1,267,0,31,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,0,37,18,39,19,41,
        0,43,0,45,0,47,20,49,0,51,21,53,0,55,22,57,23,59,24,61,25,1,0,33,
        2,0,83,83,115,115,2,0,84,84,116,116,2,0,65,65,97,97,2,0,73,73,105,
        105,2,0,67,67,99,99,2,0,72,72,104,104,2,0,82,82,114,114,2,0,69,69,
        101,101,2,0,68,68,100,100,2,0,77,77,109,109,2,0,79,79,111,111,2,
        0,85,85,117,117,2,0,76,76,108,108,2,0,66,66,98,98,2,0,74,74,106,
        106,2,0,71,71,103,103,2,0,78,78,110,110,2,0,75,75,107,107,2,0,80,
        80,112,112,2,0,86,86,118,118,2,0,70,70,102,102,2,0,88,88,120,120,
        2,0,89,89,121,121,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
        122,6,0,9,10,13,13,32,32,34,35,40,41,92,92,4,0,48,57,59,59,65,90,
        97,122,2,0,34,34,92,92,4,0,10,10,13,13,61,61,91,91,2,0,10,10,13,
        13,3,0,10,10,13,13,91,91,1,1,10,10,2,0,9,9,32,32,365,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,47,1,0,0,0,0,51,1,0,0,0,0,55,
        1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,1,63,1,0,0,0,3,65,
        1,0,0,0,5,72,1,0,0,0,7,79,1,0,0,0,9,86,1,0,0,0,11,93,1,0,0,0,13,
        95,1,0,0,0,15,117,1,0,0,0,17,124,1,0,0,0,19,132,1,0,0,0,21,142,1,
        0,0,0,23,148,1,0,0,0,25,154,1,0,0,0,27,171,1,0,0,0,29,183,1,0,0,
        0,31,190,1,0,0,0,33,202,1,0,0,0,35,204,1,0,0,0,37,213,1,0,0,0,39,
        220,1,0,0,0,41,222,1,0,0,0,43,231,1,0,0,0,45,233,1,0,0,0,47,236,
        1,0,0,0,49,247,1,0,0,0,51,255,1,0,0,0,53,271,1,0,0,0,55,273,1,0,
        0,0,57,281,1,0,0,0,59,327,1,0,0,0,61,334,1,0,0,0,63,64,5,40,0,0,
        64,2,1,0,0,0,65,66,7,0,0,0,66,67,7,1,0,0,67,68,7,2,0,0,68,69,7,1,
        0,0,69,70,7,3,0,0,70,71,7,4,0,0,71,4,1,0,0,0,72,73,7,0,0,0,73,74,
        7,5,0,0,74,75,7,2,0,0,75,76,7,6,0,0,76,77,7,7,0,0,77,78,7,8,0,0,
        78,6,1,0,0,0,79,80,7,9,0,0,80,81,7,10,0,0,81,82,7,8,0,0,82,83,7,
        11,0,0,83,84,7,12,0,0,84,85,7,7,0,0,85,8,1,0,0,0,86,87,7,10,0,0,
        87,88,7,13,0,0,88,89,7,14,0,0,89,90,7,7,0,0,90,91,7,4,0,0,91,92,
        7,1,0,0,92,10,1,0,0,0,93,94,5,41,0,0,94,12,1,0,0,0,95,96,7,1,0,0,
        96,97,7,2,0,0,97,98,7,6,0,0,98,99,7,15,0,0,99,100,7,7,0,0,100,101,
        7,1,0,0,101,102,5,95,0,0,102,103,7,12,0,0,103,104,7,3,0,0,104,105,
        7,16,0,0,105,106,7,17,0,0,106,107,5,95,0,0,107,108,7,12,0,0,108,
        109,7,3,0,0,109,110,7,13,0,0,110,111,7,6,0,0,111,112,7,2,0,0,112,
        113,7,6,0,0,113,114,7,3,0,0,114,115,7,7,0,0,115,116,7,0,0,0,116,
        14,1,0,0,0,117,118,7,18,0,0,118,119,7,11,0,0,119,120,7,13,0,0,120,
        121,7,12,0,0,121,122,7,3,0,0,122,123,7,4,0,0,123,16,1,0,0,0,124,
        125,7,18,0,0,125,126,7,6,0,0,126,127,7,3,0,0,127,128,7,19,0,0,128,
        129,7,2,0,0,129,130,7,1,0,0,130,131,7,7,0,0,131,18,1,0,0,0,132,133,
        7,3,0,0,133,134,7,16,0,0,134,135,7,1,0,0,135,136,7,7,0,0,136,137,
        7,6,0,0,137,138,7,20,0,0,138,139,7,2,0,0,139,140,7,4,0,0,140,141,
        7,7,0,0,141,20,1,0,0,0,142,143,7,2,0,0,143,144,7,12,0,0,144,145,
        7,3,0,0,145,146,7,2,0,0,146,147,7,0,0,0,147,22,1,0,0,0,148,149,3,
        35,17,0,149,150,5,58,0,0,150,151,5,58,0,0,151,152,1,0,0,0,152,153,
        3,35,17,0,153,24,1,0,0,0,154,155,7,7,0,0,155,156,7,21,0,0,156,157,
        7,4,0,0,157,158,7,12,0,0,158,159,7,11,0,0,159,160,7,8,0,0,160,161,
        7,7,0,0,161,162,5,95,0,0,162,163,7,20,0,0,163,164,7,6,0,0,164,165,
        7,10,0,0,165,166,7,9,0,0,166,167,5,95,0,0,167,168,7,2,0,0,168,169,
        7,12,0,0,169,170,7,12,0,0,170,26,1,0,0,0,171,172,7,2,0,0,172,173,
        7,8,0,0,173,174,7,8,0,0,174,175,5,95,0,0,175,176,7,12,0,0,176,177,
        7,3,0,0,177,178,7,13,0,0,178,179,7,6,0,0,179,180,7,2,0,0,180,181,
        7,6,0,0,181,182,7,22,0,0,182,28,1,0,0,0,183,184,3,35,17,0,184,185,
        5,46,0,0,185,188,7,5,0,0,186,187,7,18,0,0,187,189,7,18,0,0,188,186,
        1,0,0,0,188,189,1,0,0,0,189,30,1,0,0,0,190,191,3,35,17,0,191,192,
        5,46,0,0,192,200,7,4,0,0,193,201,7,4,0,0,194,195,7,18,0,0,195,201,
        7,18,0,0,196,197,5,43,0,0,197,201,5,43,0,0,198,199,7,21,0,0,199,
        201,7,21,0,0,200,193,1,0,0,0,200,194,1,0,0,0,200,196,1,0,0,0,200,
        198,1,0,0,0,200,201,1,0,0,0,201,32,1,0,0,0,202,203,3,35,17,0,203,
        34,1,0,0,0,204,208,7,23,0,0,205,207,7,24,0,0,206,205,1,0,0,0,207,
        210,1,0,0,0,208,206,1,0,0,0,208,209,1,0,0,0,209,36,1,0,0,0,210,208,
        1,0,0,0,211,214,8,25,0,0,212,214,3,39,19,0,213,211,1,0,0,0,213,212,
        1,0,0,0,214,215,1,0,0,0,215,213,1,0,0,0,215,216,1,0,0,0,216,38,1,
        0,0,0,217,221,3,41,20,0,218,221,3,43,21,0,219,221,3,45,22,0,220,
        217,1,0,0,0,220,218,1,0,0,0,220,219,1,0,0,0,221,40,1,0,0,0,222,223,
        5,92,0,0,223,224,8,26,0,0,224,42,1,0,0,0,225,226,5,92,0,0,226,232,
        7,1,0,0,227,228,5,92,0,0,228,232,7,6,0,0,229,230,5,92,0,0,230,232,
        7,16,0,0,231,225,1,0,0,0,231,227,1,0,0,0,231,229,1,0,0,0,232,44,
        1,0,0,0,233,234,5,92,0,0,234,235,5,59,0,0,235,46,1,0,0,0,236,242,
        5,34,0,0,237,241,8,27,0,0,238,241,3,39,19,0,239,241,3,49,24,0,240,
        237,1,0,0,0,240,238,1,0,0,0,240,239,1,0,0,0,241,244,1,0,0,0,242,
        240,1,0,0,0,242,243,1,0,0,0,243,245,1,0,0,0,244,242,1,0,0,0,245,
        246,5,34,0,0,246,48,1,0,0,0,247,253,5,92,0,0,248,250,5,13,0,0,249,
        251,5,10,0,0,250,249,1,0,0,0,250,251,1,0,0,0,251,254,1,0,0,0,252,
        254,5,10,0,0,253,248,1,0,0,0,253,252,1,0,0,0,254,50,1,0,0,0,255,
        256,5,91,0,0,256,257,3,53,26,0,257,258,5,93,0,0,258,52,1,0,0,0,259,
        260,5,61,0,0,260,261,3,53,26,0,261,262,5,61,0,0,262,272,1,0,0,0,
        263,267,5,91,0,0,264,266,9,0,0,0,265,264,1,0,0,0,266,269,1,0,0,0,
        267,268,1,0,0,0,267,265,1,0,0,0,268,270,1,0,0,0,269,267,1,0,0,0,
        270,272,5,93,0,0,271,259,1,0,0,0,271,263,1,0,0,0,272,54,1,0,0,0,
        273,274,5,35,0,0,274,275,5,91,0,0,275,276,1,0,0,0,276,277,3,53,26,
        0,277,278,5,93,0,0,278,279,1,0,0,0,279,280,6,27,0,0,280,56,1,0,0,
        0,281,311,5,35,0,0,282,312,1,0,0,0,283,287,5,91,0,0,284,286,5,61,
        0,0,285,284,1,0,0,0,286,289,1,0,0,0,287,285,1,0,0,0,287,288,1,0,
        0,0,288,312,1,0,0,0,289,287,1,0,0,0,290,294,5,91,0,0,291,293,5,61,
        0,0,292,291,1,0,0,0,293,296,1,0,0,0,294,292,1,0,0,0,294,295,1,0,
        0,0,295,297,1,0,0,0,296,294,1,0,0,0,297,301,8,28,0,0,298,300,8,29,
        0,0,299,298,1,0,0,0,300,303,1,0,0,0,301,299,1,0,0,0,301,302,1,0,
        0,0,302,312,1,0,0,0,303,301,1,0,0,0,304,308,8,30,0,0,305,307,8,29,
        0,0,306,305,1,0,0,0,307,310,1,0,0,0,308,306,1,0,0,0,308,309,1,0,
        0,0,309,312,1,0,0,0,310,308,1,0,0,0,311,282,1,0,0,0,311,283,1,0,
        0,0,311,290,1,0,0,0,311,304,1,0,0,0,312,318,1,0,0,0,313,315,5,13,
        0,0,314,316,5,10,0,0,315,314,1,0,0,0,315,316,1,0,0,0,316,319,1,0,
        0,0,317,319,7,31,0,0,318,313,1,0,0,0,318,317,1,0,0,0,319,320,1,0,
        0,0,320,321,6,28,0,0,321,58,1,0,0,0,322,324,5,13,0,0,323,325,5,10,
        0,0,324,323,1,0,0,0,324,325,1,0,0,0,325,328,1,0,0,0,326,328,5,10,
        0,0,327,322,1,0,0,0,327,326,1,0,0,0,328,329,1,0,0,0,329,327,1,0,
        0,0,329,330,1,0,0,0,330,331,1,0,0,0,331,332,6,29,0,0,332,60,1,0,
        0,0,333,335,7,32,0,0,334,333,1,0,0,0,335,336,1,0,0,0,336,334,1,0,
        0,0,336,337,1,0,0,0,337,338,1,0,0,0,338,339,6,30,0,0,339,62,1,0,
        0,0,25,0,188,200,208,213,215,220,231,240,242,250,253,267,271,287,
        294,301,308,311,315,318,324,327,329,336,1,0,1,0
    ]

class CMakeLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    Identifier_namespace = 12
    Exclude = 13
    Add_library = 14
    Header = 15
    Source = 16
    Name = 17
    Unquoted_argument = 18
    Escape_sequence = 19
    Quoted_argument = 20
    Bracket_argument = 21
    Bracket_comment = 22
    Line_comment = 23
    Newline = 24
    Space = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "'STATIC'", "'SHARED'", "'MODULE'", "'OBJECT'", "')'", 
            "'target_link_libraries'", "'PUBLIC'", "'PRIVATE'", "'INTERFACE'", 
            "'ALIAS'", "'EXCLUDE_FROM_ALL'", "'add_library'" ]

    symbolicNames = [ "<INVALID>",
            "Identifier_namespace", "Exclude", "Add_library", "Header", 
            "Source", "Name", "Unquoted_argument", "Escape_sequence", "Quoted_argument", 
            "Bracket_argument", "Bracket_comment", "Line_comment", "Newline", 
            "Space" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "Identifier_namespace", 
                  "Exclude", "Add_library", "Header", "Source", "Name", 
                  "Identifier", "Unquoted_argument", "Escape_sequence", 
                  "Escape_identity", "Escape_encoded", "Escape_semicolon", 
                  "Quoted_argument", "Quoted_cont", "Bracket_argument", 
                  "Bracket_arg_nested", "Bracket_comment", "Line_comment", 
                  "Newline", "Space" ]

    grammarFileName = "CMake.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


